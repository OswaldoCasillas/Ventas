name: Inventory Bot

on:
  workflow_dispatch: {}

  # Solo corremos cuando se abre o reabre un issue (evita 'edited' y 'labeled')
  issues:
    types: [opened, reopened]

  # Recalcula menú y reportes cuando cambian insumos/código/páginas
  push:
    paths:
      - "data/**"
      - "scripts/**"
      - "docs/register.html"
      - "docs/produccion.html"
      # Mercado
      - "docs/register_mercado.html"
      - "docs/abasto_mercado.html"
      - "docs/inventario_mercado.html"
      - "docs/ventas_mercado.html"
      - "docs/reportes_mercado.html"
      - "data/inventory_mercado.csv"

permissions:
  contents: write
  issues: write

# Evita carreras entre ejecuciones del MISMO issue
concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.run_id }}
  cancel-in-progress: true

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas
        env:
          TZ: America/Mexico_City

      - name: Prepare output folders
        run: |
          mkdir -p docs/diario
          mkdir -p docs/mercado/diario
          mkdir -p .ci-locks
        env:
          TZ: America/Mexico_City

      - name: Run processor (genera menú, reportes y procesa issues)
        env:
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: America/Mexico_City
        run: |
          python scripts/process_issue.py

      - name: Generar reportes (Efectivo vs Tarjeta)
        run: python scripts/build_reports.py
        env:
          TZ: America/Mexico_City

      - name: Commit & push (rebase-safe)
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          TZ: America/Mexico_City
        run: |
          set -e
          git config user.name  "inventory-bot"
          git config user.email "actions@users.noreply.github.com"

          branch="${BRANCH_NAME:-$(git rev-parse --abbrev-ref HEAD)}"

          git fetch origin "$branch" --prune
          git -c rebase.autoStash=true pull --rebase origin "$branch" || {
            echo "⚠️ No se pudo rebasear (autostash). Se aborta push para evitar conflictos."
            exit 0
          }

          git add -A
          if git diff --cached --quiet; then
            echo "Sin cambios para commitear."
            exit 0
          fi

          git commit -m "chore(inventory): actualizar datos, menú y reportes"
          git push origin HEAD:"$branch"
